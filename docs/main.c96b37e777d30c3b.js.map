{"version":3,"file":"main.c96b37e777d30c3b.js","mappings":"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","sources":["./src/app/Dialogs/dialogs.module.ts","./src/app/Dialogs/error-dialog/error-dialog.component.ts","./src/app/Dialogs/error-dialog/error-dialog.component.html","./src/app/Dialogs/question-dialog/question-dialog.component.ts","./src/app/Dialogs/question-dialog/question-dialog.component.html","./src/app/Dialogs/succes-dialog/success-dialog.component.ts","./src/app/Dialogs/succes-dialog/success-dialog.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/alert/alert.service.ts","./src/app/core/base-service/base-service.service.ts","./src/app/core/loader-interceptor/loader-interceptor.ts","./src/app/core/loader-service/loader-service.service.ts","./src/app/core/login-service/login.service.ts","./src/app/core/request-interceptor/request-interceptor.service.ts","./src/app/core/storage/storage.service.ts","./src/app/material/CustomPaginatorConfiguration.ts","./src/app/material/material.module.ts","./src/app/security/session.guard.ts","./src/app/shared/header/header.component.ts","./src/app/shared/header/header.component.html","./src/app/shared/inenctavidad/inenctavidad.component.ts","./src/app/shared/inenctavidad/inenctavidad.component.html","./src/app/shared/loader-overlay/loader-overlay.component.ts","./src/app/shared/loader-overlay/loader-overlay.component.html","./src/app/shared/print-error/print-error.component.ts","./src/app/shared/print-error/print-error.component.html","./src/app/shared/shared.module.ts","./src/environments/environment.prod.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { ErrorDialogComponent } from './error-dialog/error-dialog.component';\r\nimport { SuccessDialogComponent } from './succes-dialog/success-dialog.component';\r\nimport { QuestionDialogComponent } from './question-dialog/question-dialog.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [SuccessDialogComponent, ErrorDialogComponent, QuestionDialogComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModule,\r\n    MatButtonModule\r\n  ]\r\n})\r\nexport class DialogsModule { }\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-error-dialog',\r\n  templateUrl: './error-dialog.component.html',\r\n  styleUrls: ['./error-dialog.component.scss'],\r\n})\r\nexport class ErrorDialogComponent implements OnInit {\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: { message: string },\r\n    public dialogRef: MatDialogRef<ErrorDialogComponent>\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onClose(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"text-center fs-6 title\"> {{data.message}} </div>\r\n<div mat-dialog-content>\r\n  <br>\r\n</div>\r\n<mat-card-actions>\r\n  <button mat-raised-button class=\"aceptar\" (click)=\"onClose()\">Aceptar</button>\r\n</mat-card-actions>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-question-dialog',\r\n  templateUrl: './question-dialog.component.html',\r\n  styleUrls: ['./question-dialog.component.scss'],\r\n})\r\nexport class QuestionDialogComponent implements OnInit {\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: { question: string },\r\n    public dialogRef: MatDialogRef<QuestionDialogComponent>\r\n  ) {}\r\n\r\n  submit(op: boolean) {\r\n    this.dialogRef.close(op);\r\n  }\r\n  ngOnInit(): void {}\r\n}\r\n","<div>\r\n  <h5 class=\"text-center title\">{{ data.question }}</h5>\r\n  <div>\r\n    <div class=\"mat-dialog-actions actions\">\r\n      <button\r\n        class=\"portal-btn-secondary\"\r\n        type=\"button\"\r\n        mat-stroked-button\r\n        (click)=\"submit(false)\"\r\n      >\r\n        No por ahora\r\n      </button>\r\n      <button\r\n        class=\"portal-btn-primary\"\r\n        type=\"submit\"\r\n        mat-stroked-button\r\n        (click)=\"submit(true)\"\r\n      >\r\n        Aceptar\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-success-dialog',\r\n  templateUrl: './success-dialog.component.html',\r\n  styleUrls: ['./success-dialog.component.scss'],\r\n})\r\nexport class SuccessDialogComponent implements OnInit {\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: { message: string },\r\n    public dialogRef: MatDialogRef<SuccessDialogComponent>\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onClose(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"text-center fs-6 title\"> {{data.message}} </div>\r\n<div mat-dialog-content>\r\n  <br>\r\n</div>\r\n<mat-card-actions>\r\n  <button mat-raised-button class=\"aceptar\" (click)=\"onClose()\">Aceptar</button>\r\n</mat-card-actions>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SessionGuard } from './security/session.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'home',\r\n    loadChildren: () =>\r\n      import('./Public/public.module').then((m) => m.PublicModule),\r\n  },\r\n  {\r\n    path: 'consola',\r\n    loadChildren: () =>\r\n      import('./Private/private.module').then((m) => m.PrivateModule),\r\n    canActivate: [SessionGuard],\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'home',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import {\r\n  AfterViewChecked,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  HostListener,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Subject } from 'rxjs/internal/Subject';\r\nimport { LoaderServiceService } from './core/loader-service/loader-service.service';\r\nimport { StorageService } from './core/storage/storage.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnDestroy, AfterViewChecked {\r\n  public load = false;\r\n  title = 'consolaFrontEnd';\r\n\r\n  userActivity: any;\r\n  userInactive: Subject<any> = new Subject();\r\n  private _subs: Subscription | undefined;\r\n\r\n  constructor(\r\n    private storageService: StorageService,\r\n    private _loaderService: LoaderServiceService,\r\n    private cd: ChangeDetectorRef\r\n  ) {\r\n    this.setTimeout();\r\n    this.userInactive.subscribe(() => {\r\n      console.log('user has been inactive for 2m');\r\n      this.storageService.closeSession();\r\n    });\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    this.cd.detectChanges();\r\n    this._subs = this._loaderService.isLoading.subscribe((res) => {\r\n      this.load = res;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (!this._subs) return;\r\n    this._subs.unsubscribe();\r\n  }\r\n\r\n  setTimeout() {\r\n    this.userActivity = setTimeout(\r\n      () => this.userInactive.next(undefined),\r\n      180000\r\n    );\r\n  }\r\n\r\n  @HostListener('window:keydown.enter', ['$event'])\r\n  handleKeyDown(event: KeyboardEvent) {\r\n    clearTimeout(this.userActivity);\r\n    this.setTimeout();\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent) {\r\n    clearTimeout(this.userActivity);\r\n    this.setTimeout();\r\n  }\r\n\r\n  @HostListener('mousemove', ['$event'])\r\n  onMove(event: MouseEvent) {\r\n    clearTimeout(this.userActivity);\r\n    this.setTimeout();\r\n  }\r\n}\r\n","<app-loader-overlay *ngIf=\"load\"></app-loader-overlay>\r\n<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { RequestInterceptorService } from './core/request-interceptor/request-interceptor.service';\r\nimport { DialogsModule } from './Dialogs/dialogs.module';\r\nimport { LoaderInterceptor } from './core/loader-interceptor/loader-interceptor';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    SharedModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    DialogsModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: RequestInterceptorService,\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: LoaderInterceptor,\r\n      multi: true,\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ErrorDialogComponent } from 'src/app/Dialogs/error-dialog/error-dialog.component';\r\nimport { SuccessDialogComponent } from '../../Dialogs/succes-dialog/success-dialog.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AlertService {\r\n  constructor(private matDialog: MatDialog) {}\r\n\r\n  public error(message: string): MatDialogRef<ErrorDialogComponent> {\r\n    return this.matDialog.open(ErrorDialogComponent, {\r\n      data: {\r\n        message,\r\n      },\r\n    });\r\n  }\r\n\r\n  public succes(message: string): MatDialogRef<ErrorDialogComponent> {\r\n    return this.matDialog.open(SuccessDialogComponent, {\r\n      data: {\r\n        message,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { BaseResponse } from '../../Interfaces/Response/baseResponse.interfase';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BaseServiceService {\r\n  private baseUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  get<T>(url: string): Promise<BaseResponse<T> | undefined> {\r\n    return this.http.get<BaseResponse<T>>(this.baseUrl + url).toPromise();\r\n  }\r\n\r\n  post<T, R>(url: string, request: R): Promise<BaseResponse<T> | void> {\r\n    return this.http\r\n      .post<BaseResponse<T>>(this.baseUrl + url, request)\r\n      .toPromise();\r\n  }\r\n}\r\n","import {\r\n    HttpEvent,\r\n    HttpHandler,\r\n    HttpInterceptor,\r\n    HttpRequest,\r\n    HttpResponse,\r\n  } from '@angular/common/http';\r\n  import { Injectable } from '@angular/core';\r\n  import { Observable } from 'rxjs';\r\nimport { LoaderServiceService } from '../loader-service/loader-service.service';\r\n  \r\n  \r\n  @Injectable()\r\n  export class LoaderInterceptor implements HttpInterceptor {\r\n    private requests: HttpRequest<any>[] = [];\r\n  \r\n    constructor(private _loaderService: LoaderServiceService) {}\r\n  \r\n    removeRequest(req: HttpRequest<any>): void {\r\n      const i = this.requests.indexOf(req);\r\n      if (i >= 0) {\r\n        this.requests.splice(i, 1);\r\n      }\r\n      this._loaderService.isLoading.next(this.requests.length > 0);\r\n    }\r\n  \r\n    intercept(\r\n      request: HttpRequest<unknown>,\r\n      next: HttpHandler\r\n    ): Observable<HttpEvent<unknown>> {\r\n      this.requests.push(request);\r\n      this._loaderService.isLoading.next(this.requests.length > 0);\r\n      return new Observable((observer) => {\r\n        const subscription = next.handle(request).subscribe(\r\n          (event) => {\r\n            if (event instanceof HttpResponse) {\r\n              this.removeRequest(request);\r\n              observer.next(event);\r\n            }\r\n          },\r\n          (err) => {\r\n            this.removeRequest(request);\r\n            observer.error(err);\r\n          },\r\n          () => {\r\n            this.removeRequest(request);\r\n            observer.complete();\r\n          }\r\n        );\r\n        return () => {\r\n          this.removeRequest(request);\r\n          subscription.unsubscribe();\r\n        };\r\n      });\r\n    }\r\n  }\r\n  ","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LoaderServiceService {\r\n  public isLoading = new BehaviorSubject(false);\r\n\r\n  constructor() {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LoginReq } from '../../Interfaces/Request/LoginReq.interface';\r\nimport { BaseServiceService } from '../base-service/base-service.service';\r\nimport { LoginResponse } from '../../Interfaces/Response/login.interface';\r\nimport { LogOutReq } from 'src/app/Interfaces/Request/LogOutReq.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  constructor(private baseService: BaseServiceService) { }\r\n\r\n  login(request:LoginReq){\r\n    return this.baseService.post<LoginResponse, LoginReq>('/session/login',request)\r\n  }\r\n\r\n  logout(request: LogOutReq): Promise<any> {\r\n    return this.baseService.post('/session/logout', request);\r\n  }\r\n}\r\n","import {\r\n  HttpErrorResponse,\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpHeaders,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpResponse,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { catchError, Observable, tap, throwError } from 'rxjs';\r\nimport { StorageService } from '../storage/storage.service';\r\nimport { AlertService } from '../alert/alert.service';\r\n\r\n@Injectable()\r\nexport class RequestInterceptorService implements HttpInterceptor {\r\n  constructor(\r\n    private storageService: StorageService,\r\n    private alertService: AlertService\r\n  ) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    const session = this.storageService.getSession();\r\n    let headers: HttpHeaders = new HttpHeaders({});\r\n    if (session?.jwt) {\r\n      headers = new HttpHeaders({\r\n        Authorization: `Bearer ${session?.jwt}` || '',\r\n      });\r\n    }\r\n\r\n    const reqClone = request.clone({\r\n      headers,\r\n    });\r\n\r\n    return next.handle(reqClone).pipe(\r\n      tap((res) => {\r\n        if (res instanceof HttpResponse && session?.jwt) {\r\n          const newtkn = res.headers.get('Authorization');\r\n          session.jwt = newtkn || session.jwt || '';\r\n          this.storageService.setSession(session);\r\n        }\r\n        if (res instanceof HttpResponse && res.body.responseCode === 1) {\r\n          this.catchIntercept({\r\n            handle: true,\r\n            message: res.body.description,\r\n          });\r\n        }\r\n        return res;\r\n      }),\r\n      catchError((err) => this.catchIntercept(err))\r\n    );\r\n  }\r\n\r\n  catchIntercept(error: any): Observable<any> {\r\n    if (error instanceof HttpErrorResponse) {\r\n      this.alertService.error(\r\n        error.status === 401\r\n          ? error.error.description ||\r\n              'Tu sesión llevaba mucho tiempo inactiva. Por seguridad, la hemos cerrado.'\r\n          : 'Hubo un error inesperado, intente más tarde'\r\n      );\r\n      if (error.status === 401) this.storageService.closeSession(true);\r\n      if (error.status === 404) console.log(error.message);\r\n    }\r\n    if (error.handle) {\r\n      this.alertService.error(\r\n        error.message || 'Hubo un error inesperado, intente más tarde'\r\n      );\r\n    }\r\n\r\n    return throwError(error);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LoginResponse } from 'src/app/Interfaces/Response/login.interface';\r\nimport { LoginService } from 'src/app/core/login-service/login.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class StorageService {\r\n  private _sessionRef = 'consolaAdministrativa';\r\n\r\n  constructor(private loginService: LoginService, private router: Router) {}\r\n\r\n  setSession(session: LoginResponse): void {\r\n    localStorage.setItem(this._sessionRef, JSON.stringify(session));\r\n  }\r\n\r\n  getSession(): LoginResponse | undefined {\r\n    const session = localStorage.getItem(this._sessionRef) || undefined;\r\n    if (!session) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(session) as LoginResponse;\r\n  }\r\n\r\n  async closeSession(unauthorized = false): Promise<void> {\r\n    const session = this.getSession();\r\n    if (session && !unauthorized) {\r\n      await this.loginService.logout({\r\n        userId: session.userId,\r\n      });\r\n    }\r\n    localStorage.removeItem(this._sessionRef);\r\n    this.router.navigate(['/home']);\r\n  }\r\n}\r\n","// import { MatPaginatorIntl } from '@angular/material';\r\n\r\nimport { MatPaginatorIntl } from '@angular/material/paginator';\r\n\r\nexport function CustomPaginator() {\r\n  const customPaginatorIntl = new MatPaginatorIntl();\r\n\r\n  customPaginatorIntl.itemsPerPageLabel = 'Registros por pagina:';\r\n\r\n  return customPaginatorIntl;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport {\r\n  MatPaginatorIntl,\r\n  MatPaginatorModule,\r\n} from '@angular/material/paginator';\r\nimport { CustomPaginator } from './CustomPaginatorConfiguration';\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [CommonModule],\r\n  exports: [\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatProgressSpinnerModule,\r\n    MatSidenavModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatRadioModule,\r\n    MatCheckboxModule,\r\n    MatIconModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n  ],\r\n  providers: [\r\n    { provide: MAT_DATE_LOCALE, useValue: 'en-GB' },\r\n    { provide: MatPaginatorIntl, useValue: CustomPaginator() },\r\n  ],\r\n})\r\nexport class MaterialModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { StorageService } from '../core/storage/storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SessionGuard implements CanActivate {\r\n  constructor(private storageService: StorageService, private router: Router) {}\r\n  canActivate(): boolean {\r\n    const session = this.storageService.getSession();\r\n    if (!session) {\r\n      this.router.navigate(['/home/login']);\r\n    }\r\n    return !!session;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { StorageService } from '../../core/storage/storage.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  constructor(private storageService: StorageService) {}\r\n\r\n  cerrarSesion() {\r\n    this.storageService.closeSession();\r\n  }\r\n\r\n  getLogin(): boolean {\r\n    const session = this.storageService.getSession();\r\n    return !!session;\r\n  }\r\n  ngOnInit(): void {}\r\n}\r\n","<mat-toolbar class=\"HeaderBanorte\">\r\n  <div class=\"logo\"></div>\r\n  <div class=\"spacer\"></div>\r\n  <div *ngIf=\"getLogin()\">\r\n    <button\r\n      (click)=\"cerrarSesion()\"\r\n      type=\"submit\"\r\n      mat-raised-button\r\n      class=\"card_button\"\r\n    >\r\n      cerrar sesion\r\n    </button>\r\n  </div>\r\n</mat-toolbar>\r\n","import { Component, HostListener, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-inenctavidad',\r\n  templateUrl: './inenctavidad.component.html',\r\n  styleUrls: ['./inenctavidad.component.scss'],\r\n})\r\nexport class InenctavidadComponent implements OnInit {\r\n  userActivity: any;\r\n  userInactive: Subject<any> = new Subject();\r\n\r\n  constructor() {\r\n    this.setTimeout();\r\n    this.userInactive.subscribe(() =>\r\n      console.log('user has been inactive for 3s')\r\n    );\r\n  }\r\n\r\n  setTimeout() {\r\n    this.userActivity = setTimeout(\r\n      () => this.userInactive.next(undefined),\r\n      3000\r\n    );\r\n  }\r\n\r\n  @HostListener('window:mousemove') refreshUserState() {\r\n    clearTimeout(this.userActivity);\r\n    this.setTimeout();\r\n  }\r\n\r\n  @HostListener('window:keydown.enter', ['$event.target'])\r\n  onClick() {\r\n    // console.log('button' );\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<p>inenctavidad works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loader-overlay',\r\n  templateUrl: './loader-overlay.component.html',\r\n  styleUrls: ['./loader-overlay.component.css']\r\n})\r\nexport class LoaderOverlayComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"loader-overlay\">\r\n    <!-- <div class=\"img-rotate\">\r\n        <img  src=\"../../../assets/loading.svg\" alt=\"loading\">\r\n    </div> -->\r\n    <mat-spinner class=\"spinner\"  color=\"primary\" mode=\"indeterminate\" value=\"100\">\r\n  </mat-spinner>\r\n  </div>\r\n  ","import { Component, Input, OnInit } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-print-error',\r\n  templateUrl: './print-error.component.html',\r\n  styleUrls: ['./print-error.component.scss'],\r\n})\r\nexport class PrintErrorComponent implements OnInit {\r\n  @Input() errors: any = {};\r\n  @Input() control: AbstractControl = {} as AbstractControl;\r\n  errorsKeys: any[] = [];\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.errorsKeys = Object.keys(this.errors);\r\n  }\r\n}\r\n","<div class=\"ion-item\" lines=\"none\" *ngIf=\"control.errors && control.dirty\">\r\n  <div class=\"ion-item\" *ngFor=\"let errorKey of errorsKeys\">\r\n    <p\r\n      class=\"style-p gotham-book fs-11\"\r\n      *ngIf=\"control.hasError(errorKey) && control.touched\"\r\n    >\r\n      {{ errors[errorKey] }}\r\n    </p>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { PrintErrorComponent } from './print-error/print-error.component';\r\nimport { InenctavidadComponent } from './inenctavidad/inenctavidad.component';\r\nimport { LoaderOverlayComponent } from './loader-overlay/loader-overlay.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HeaderComponent,\r\n    PrintErrorComponent,\r\n    InenctavidadComponent,\r\n    LoaderOverlayComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,MaterialModule\r\n  ],\r\n  exports:[\r\n    HeaderComponent,\r\n    PrintErrorComponent,\r\n    InenctavidadComponent,\r\n    LoaderOverlayComponent\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","// import { ENV_URLS } from './environment';\r\n\r\nexport const environment = {\r\n  production: true,\r\n  apiUrl: '',\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.error(err));\r\n"],"names":["StorageService","constructor","loginService","router","setSession","session","localStorage","setItem","_sessionRef","JSON","stringify","getSession","getItem","undefined","parse","closeSession","unauthorized","logout","userId","removeItem","navigate","i0","factory","providedIn"],"sourceRoot":"webpack:///"}