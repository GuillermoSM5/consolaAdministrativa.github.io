{"version":3,"file":"src_app_Public_public_module_ts.bac9dc7e2c6a4a58.js","mappings":"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","sources":["./src/app/Public/Pages/login/login.component.ts","./src/app/Public/Pages/login/login.component.html","./src/app/Public/Pages/public-index/public-index.component.ts","./src/app/Public/Pages/public-index/public-index.component.html","./src/app/Public/public-routing.module.ts","./src/app/Public/public.module.ts","./src/app/security/login.guard.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from 'src/app/core/login-service/login.service';\r\nimport { StorageService } from 'src/app/core/storage/storage.service';\r\nimport { LoginResponse } from '../../../Interfaces/Response/login.interface';\r\nimport { BaseResponse } from '../../../Interfaces/Response/baseResponse.interfase';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginError = {\r\n    email: {\r\n      email: 'El correo no es válido ejemplo@banorte.com',\r\n      required: 'El correo es requerido',\r\n      pattern: 'El correo no es @banorte.com',\r\n    },\r\n    phrase: {\r\n      required: 'La contraseña es requerida',\r\n      minlength:\r\n        'La longitud de la contraseña debe estar entre los 8 y 12 caracteres',\r\n      maxlength:\r\n        'La longitud de la contraseña debe estar entre los 8 y 12 caracteres',\r\n    },\r\n  };\r\n\r\n  loginForm: FormGroup = this.fb.group({\r\n    email: [\r\n      ,\r\n      [\r\n        Validators.required,\r\n        Validators.email,\r\n        Validators.pattern('^.*banorte.com.*$'),\r\n      ],\r\n    ],\r\n    phrase: [\r\n      ,\r\n      [\r\n        ,\r\n        Validators.required,\r\n        Validators.minLength(8),\r\n        Validators.maxLength(12),\r\n      ],\r\n    ],\r\n  });\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private loginService: LoginService,\r\n    private storageService: StorageService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  async sendLogin() {\r\n    const response = await this.loginService.login(this.loginForm.value);\r\n    // const response: BaseResponse<LoginResponse> = {\r\n    //   responseCode: 0,\r\n    //   description: 'mock',\r\n    //   result: {\r\n    //     userId: 1,\r\n    //     name: 'Guillermo',\r\n    //     lastName: 'Soto',\r\n    //     motherLastName: 'Marquez',\r\n    //     jwt: 'qwerty',\r\n    //   },\r\n    // };\r\n\r\n    if (response?.responseCode === 1 || response === undefined) {\r\n      return;\r\n    }\r\n    this.storageService.setSession(response!?.result);\r\n    this.router.navigate(['/consola']);\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<div class=\"loginContainer\">\r\n  <div class=\"card\">\r\n    <div class=\"card_header\">\r\n      <h4><b>Consola Administrativa</b></h4>\r\n    </div>\r\n    <div class=\"card_body\">\r\n      <h3 class=\"title-section__text\">Bienvenido</h3>\r\n      <p class=\"title-section__text\">Para continuar, por favor inicia sesión</p>\r\n      <form (ngSubmit)=\"sendLogin()\" [formGroup]=\"loginForm\">\r\n        <div class=\"customField\">\r\n          <label class=\"customField_label\">Usuario</label>\r\n          <input\r\n            autocomplete=\"off\"\r\n            type=\"text\"\r\n            formControlName=\"email\"\r\n            class=\"customField_input\"\r\n          />\r\n          <app-print-error\r\n            [errors]=\"loginError.email\"\r\n            [control]=\"loginForm.get('email') || loginForm\"\r\n          ></app-print-error>\r\n        </div>\r\n        <div class=\"customField\">\r\n          <label class=\"customField_label\">Contraseña</label>\r\n          <input\r\n            autocomplete=\"off\"\r\n            type=\"password\"\r\n            formControlName=\"phrase\"\r\n            class=\"customField_input\"\r\n          />\r\n          <app-print-error\r\n            [errors]=\"loginError.phrase\"\r\n            [control]=\"loginForm.get('phrase') || loginForm\"\r\n          ></app-print-error>\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          mat-raised-button\r\n          class=\"card_button\"\r\n          [disabled]=\"loginForm.invalid\"\r\n        >\r\n          Aceptar\r\n        </button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-public-index',\r\n  templateUrl: './public-index.component.html',\r\n  styleUrls: ['./public-index.component.scss'],\r\n})\r\nexport class PublicIndexComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './Pages/login/login.component';\r\nimport { PublicIndexComponent } from './Pages/public-index/public-index.component';\r\nimport { LoginGuard } from '../security/login.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PublicIndexComponent,\r\n    children: [\r\n      {\r\n        path: 'logIn',\r\n        component: LoginComponent,\r\n        canActivate: [LoginGuard],\r\n      },\r\n      {\r\n        path: '',\r\n        redirectTo: 'logIn',\r\n        pathMatch: 'full',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PublicRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './Pages/login/login.component';\r\nimport { PublicIndexComponent } from './Pages/public-index/public-index.component';\r\nimport { PublicRoutingModule } from './public-routing.module';\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    PublicIndexComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PublicRoutingModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class PublicModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { StorageService } from '../core/storage/storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LoginGuard implements CanActivate {\r\n  constructor(private storageService: StorageService, private router: Router) {}\r\n  canActivate(): boolean {\r\n    const session = this.storageService.getSession();\r\n    if (session) {\r\n      this.router.navigate(['/consola']);\r\n    }\r\n    return !session;\r\n  }\r\n}\r\n"],"names":["Validators","LoginComponent","constructor","fb","loginService","storageService","router","email","required","pattern","phrase","minlength","maxlength","group","minLength","maxLength","sendLogin","response","login","loginForm","value","responseCode","undefined","setSession","_a","result","navigate","ngOnInit","i0","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"webpack:///"}